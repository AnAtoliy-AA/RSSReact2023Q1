{"version":3,"file":"entry-server.js","sources":["../../src/assets/images/404.png","../../src/pages/notFoundPage/notFoundPage.tsx","../../src/utils/styles/stylesUtils.ts","../../src/components/styledButton/styledButton.tsx","../../src/store/slices/searchSlice/searchSlice.ts","../../src/hooks/reduxHooks.ts","../../src/components/searchBar/searchBar.tsx","../../src/constants/common/common.ts","../../src/services/form/formService.ts","../../src/assets/icons/rotate.svg","../../src/components/card/frontSide.tsx","../../src/components/card/backSide.tsx","../../src/components/card/card.tsx","../../src/components/card/cardModal.tsx","../../src/components/waveAnimation/waveAnimation.tsx","../../src/constants/apiPath/apiPath.ts","../../src/services/api/searchService.ts","../../src/services/card/card.service.ts","../../src/components/cardsList/cardsList.tsx","../../src/pages/mainPage/mainPage.tsx","../../src/assets/icons/github.svg","../../src/assets/icons/linkedin.svg","../../src/pages/aboutUsPage/aboutUsPage.tsx","../../src/constants/appPath/appPath.ts","../../src/components/customNavLink/customNavLink.tsx","../../src/components/showLocation/showLocation.tsx","../../src/components/header/header.tsx","../../src/components/layout/layout.tsx","../../src/store/slices/formSlice/formSlice.ts","../../src/pages/createCardPage/formControlWithChildren.tsx","../../src/pages/createCardPage/formControl.tsx","../../src/pages/createCardPage/customForm.tsx","../../src/pages/createCardPage/newCardPage.tsx","../../src/routes/router.tsx","../../src/entry-server.tsx"],"sourcesContent":["export default \"__VITE_ASSET__62e5caf9__\"","import NotFoundImage from '@assets/images/404.png';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledImage = styled.img`\r\n  filter: grayscale();\r\n  max-height: 80vh;\r\n  padding-top: 2rem;\r\n`;\r\n\r\nfunction NotFoundPage() {\r\n  return <StyledImage src={NotFoundImage} alt=\"NOT FOUND PAGE\" />;\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import darkTheme from '@constants/styles/colors';\r\n\r\nexport type RecursiveKeyOf<TObj extends object> = {\r\n  [TKey in keyof TObj & (string | number)]: TObj[TKey] extends unknown[]\r\n    ? `${TKey}`\r\n    : TObj[TKey] extends object\r\n    ? `${TKey}` | `${TKey}.${RecursiveKeyOf<TObj[TKey]>}`\r\n    : `${TKey}`;\r\n}[keyof TObj & (string | number)];\r\n\r\ntype ColorKey = RecursiveKeyOf<typeof darkTheme>;\r\n\r\nconst createCssVar = (items: object, prefix = '-'): Array<string> =>\r\n  Object.entries(items).flatMap(([key, value]) => {\r\n    const varName = `${prefix}-${key}`;\r\n\r\n    if (typeof value === 'object') return createCssVar(value, varName);\r\n\r\n    return `${varName}:${value}`;\r\n  });\r\n\r\nexport const createCssVars = (themeColors: object) => createCssVar(themeColors).join(';');\r\n\r\nconst color = (colorKey: ColorKey) => {\r\n  const cssVar = colorKey.split('.').reduce((acc, key) => `${acc}-${key}`, '-');\r\n\r\n  return `var(${cssVar})`;\r\n};\r\n\r\nexport default color;\r\n","import color from '@utils/styles/stylesUtils';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  max-height: 4rem;\r\n  border-radius: 1.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background-color: ${color('neutral.button_background')};\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default StyledButton;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SearchState {\r\n  searchValue: string;\r\n}\r\n\r\nconst initialState: SearchState = {\r\n  searchValue: '',\r\n};\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState,\r\n  reducers: {\r\n    changeValue: (state, action: PayloadAction<string>) => {\r\n      state.searchValue = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeValue } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;\r\n","import { AppDispatch, RootState } from '@store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport type { TypedUseSelectorHook } from 'react-redux';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { ChangeEvent, FormEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport StyledButton from '@components/styledButton/styledButton';\r\nimport { RootState } from '@store/store';\r\nimport { changeValue } from '@store/slices/searchSlice/searchSlice';\r\nimport { useAppDispatch, useAppSelector } from '@hooks/reduxHooks';\r\n\r\nconst SearchContainer = styled.form`\r\n  flex-grow: 3;\r\n  text-align: center;\r\n`;\r\n\r\nconst SearchBarInput = styled.input`\r\n  font-size: 1.5rem;\r\n  margin: 0.5rem;\r\n`;\r\n\r\nconst SearchBarButton = styled(StyledButton)`\r\n  color: ${color('neutral.button_text')};\r\n`;\r\n\r\ninterface ISearchBarProps {\r\n  onInputSubmit: (searchValue: string) => void;\r\n}\r\n\r\nfunction SearchBar(props: ISearchBarProps): JSX.Element {\r\n  const { onInputSubmit } = props;\r\n  const { searchValue } = useAppSelector((state: RootState) => state.search);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n\r\n    dispatch(changeValue(value));\r\n  };\r\n\r\n  const handleOnSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const searchText = (event?.currentTarget?.[0] as HTMLInputElement)?.value;\r\n\r\n    onInputSubmit(searchText);\r\n  };\r\n\r\n  return (\r\n    <SearchContainer onSubmit={handleOnSubmit}>\r\n      <SearchBarInput value={searchValue} name=\"searchInput\" onChange={handleInputChange} />\r\n      <SearchBarButton type=\"submit\">Search</SearchBarButton>\r\n    </SearchContainer>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","export const NOT_AVAILABLE_TEXT = 'N/A';\r\n\r\nexport const DEFAULT_STRING_VALUE = '';\r\nexport const DEFAULT_NUMBER_VALUE = 0;\r\n\r\nconst MS_IN_SECONDS = 1000;\r\n\r\nexport const DEFAULT_VALUES = {\r\n  IDLE_DEBOUNCE: 2 * MS_IN_SECONDS,\r\n};\r\n","import { ICardValues } from '@services/card/card.service';\r\nimport { HTMLInputTypeAttribute } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport interface ICardDataOpts {\r\n  title: string;\r\n  channelTitle: string;\r\n  image?: FileList;\r\n  description: string;\r\n  priority: string;\r\n  createdAt: string;\r\n  isFavorites: boolean;\r\n}\r\n\r\nexport enum FormFields {\r\n  TITLE = 'title',\r\n  CHANNEL_TITLE = 'channelTitle',\r\n  IMAGE = 'image',\r\n  DESCRIPTION = 'description',\r\n  PRIORITY = 'priority',\r\n  PUBLISHED_AT = 'publishedAt',\r\n  FAVORITES = 'isFavorites',\r\n  NOTIFICATIONS = 'notifications',\r\n  CONFIRM_DATA = 'confirmData',\r\n  MARK_ME_AS_CREATOR = 'markMeAsCreator',\r\n  SEND = 'send',\r\n  DO_NOT_SEND = 'doNotSend',\r\n}\r\n\r\ninterface ISelectChild {\r\n  id: number;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nexport interface IRegisterOptions {\r\n  pattern?: string;\r\n  required: boolean;\r\n}\r\nexport interface IInputValues {\r\n  id: number;\r\n  label: string;\r\n  name: FormFields;\r\n  placeholder: FormFields;\r\n  type: HTMLInputTypeAttribute;\r\n  errorMessage: string;\r\n  children?: Array<ISelectChild>;\r\n  registerOptions?: IRegisterOptions;\r\n}\r\n\r\nexport const RegExpPattern = {\r\n  title: '[\\\\w\\\\W]{3,}',\r\n  description: '[\\\\w\\\\W]{1,}',\r\n};\r\n\r\nclass FormService {\r\n  static createCardData(currentForm: HTMLFormElement): ICardValues {\r\n    const formValues = Object.fromEntries(\r\n      new FormData(currentForm).entries()\r\n    ) as unknown as ICardDataOpts;\r\n\r\n    return this.createCardItemDto(formValues);\r\n  }\r\n\r\n  static convertNameToLabel(title: string): string {\r\n    const words = title.match(/[a-zA-Z][^A-Z]*/g) || [];\r\n\r\n    return words.join(' ');\r\n  }\r\n\r\n  static createCardItemDto(opts: ICardDataOpts): ICardValues {\r\n    const { image } = opts;\r\n    const id = uuidv4();\r\n    const imageUrl = image?.length ? URL.createObjectURL(image?.[0]) : '';\r\n\r\n    const optsCopy = this.removeImage(opts);\r\n\r\n    return { id, imageUrl, ...optsCopy };\r\n  }\r\n\r\n  private static removeImage(opts: ICardDataOpts): ICardDataOpts {\r\n    const optsCopy = structuredClone(opts);\r\n    delete optsCopy.image;\r\n\r\n    return optsCopy;\r\n  }\r\n\r\n  static inputsArrayVocabulary: Readonly<Array<IInputValues>> = [\r\n    {\r\n      id: 1,\r\n      label: FormService.convertNameToLabel(FormFields.TITLE),\r\n      name: FormFields.TITLE,\r\n      placeholder: FormFields.TITLE,\r\n      type: 'text',\r\n      errorMessage: 'required field with letters and numbers. Should contain at least 3 symbols.',\r\n      registerOptions: {\r\n        required: true,\r\n        pattern: RegExpPattern.title,\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      label: FormService.convertNameToLabel(FormFields.CHANNEL_TITLE),\r\n      name: FormFields.CHANNEL_TITLE,\r\n      placeholder: FormFields.CHANNEL_TITLE,\r\n      type: 'text',\r\n      registerOptions: {\r\n        required: true,\r\n        pattern: RegExpPattern.title,\r\n      },\r\n      errorMessage: 'required field with letters and numbers. Should contain at least 3 symbols.',\r\n    },\r\n    {\r\n      id: 3,\r\n      label: FormService.convertNameToLabel(FormFields.IMAGE),\r\n      name: FormFields.IMAGE,\r\n      placeholder: FormFields.IMAGE,\r\n      type: 'file',\r\n      registerOptions: {\r\n        required: true,\r\n      },\r\n      errorMessage: 'required',\r\n    },\r\n    {\r\n      id: 4,\r\n      label: FormService.convertNameToLabel(FormFields.DESCRIPTION),\r\n      name: FormFields.DESCRIPTION,\r\n      placeholder: FormFields.DESCRIPTION,\r\n      type: 'text',\r\n      registerOptions: {\r\n        required: true,\r\n        pattern: RegExpPattern.description,\r\n      },\r\n      errorMessage: 'required',\r\n    },\r\n    {\r\n      id: 5,\r\n      label: FormService.convertNameToLabel(FormFields.PRIORITY),\r\n      name: FormFields.PRIORITY,\r\n      placeholder: FormFields.PRIORITY,\r\n      type: 'select',\r\n      registerOptions: {\r\n        required: true,\r\n      },\r\n      errorMessage: 'required',\r\n      children: [\r\n        {\r\n          id: 1,\r\n          name: '1',\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '2',\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '3',\r\n        },\r\n        {\r\n          id: 4,\r\n          name: '4',\r\n        },\r\n        {\r\n          id: 5,\r\n          name: '5',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 6,\r\n      label: FormService.convertNameToLabel(FormFields.PUBLISHED_AT),\r\n      name: FormFields.PUBLISHED_AT,\r\n      placeholder: FormFields.PUBLISHED_AT,\r\n      type: 'date',\r\n      registerOptions: {\r\n        required: true,\r\n      },\r\n      errorMessage: 'required',\r\n    },\r\n    {\r\n      id: 7,\r\n      label: FormService.convertNameToLabel(FormFields.NOTIFICATIONS),\r\n      name: FormFields.NOTIFICATIONS,\r\n      placeholder: FormFields.NOTIFICATIONS,\r\n      type: 'radio',\r\n      registerOptions: {\r\n        required: false,\r\n      },\r\n      errorMessage: '',\r\n      children: [\r\n        {\r\n          id: 1,\r\n          name: FormFields.SEND,\r\n          label: FormService.convertNameToLabel(FormFields.SEND),\r\n        },\r\n        {\r\n          id: 2,\r\n          name: FormFields.DO_NOT_SEND,\r\n          label: FormService.convertNameToLabel(FormFields.DO_NOT_SEND),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 8,\r\n      label: FormService.convertNameToLabel(FormFields.MARK_ME_AS_CREATOR),\r\n      name: FormFields.MARK_ME_AS_CREATOR,\r\n      placeholder: FormFields.MARK_ME_AS_CREATOR,\r\n      type: 'checkbox',\r\n      registerOptions: {\r\n        required: true,\r\n      },\r\n      errorMessage: 'required',\r\n    },\r\n    {\r\n      id: 9,\r\n      label: FormService.convertNameToLabel(FormFields.CONFIRM_DATA),\r\n      name: FormFields.CONFIRM_DATA,\r\n      placeholder: FormFields.CONFIRM_DATA,\r\n      type: 'checkbox',\r\n      registerOptions: {\r\n        required: true,\r\n      },\r\n      errorMessage: 'required',\r\n    },\r\n  ];\r\n}\r\n\r\nexport default FormService;\r\n","export default \"__VITE_ASSET__ffd9b989__\"","import StyledButton from '@components/styledButton/styledButton';\r\nimport { NOT_AVAILABLE_TEXT } from '@constants/common/common';\r\nimport rotateIcon from '@assets/icons/rotate.svg';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport styled from 'styled-components';\r\n\r\nexport interface CardProps {\r\n  title?: string;\r\n  channelTitle?: string;\r\n  imageUrl?: string;\r\n  description?: string;\r\n  publishedAt?: string;\r\n  videoId?: string;\r\n  onRotate?: VoidFunction;\r\n  onGetInfo?: VoidFunction;\r\n}\r\n\r\nexport const SideCardContainer = styled.div`\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 15rem;\r\n`;\r\n\r\nconst FrontSideContainer = styled(SideCardContainer)`\r\n  transform: rotateY(0deg);\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  width: 100%;\r\n  color: ${color('neutral.card_title')};\r\n`;\r\n\r\nexport const FrontCardTitle = styled(CardTitle)`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CardSubtitle = styled.h4`\r\n  color: ${color('neutral.card_title')};\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  width: 100%;\r\n\r\n  img {\r\n    width: 100%;\r\n    max-width: 320px;\r\n    max-height: 180px;\r\n\r\n    filter: grayscale();\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardDescription = styled.p`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst CardDate = styled.div``;\r\n\r\nfunction FrontCardSide(props: CardProps) {\r\n  const { title, channelTitle, imageUrl, description, publishedAt, videoId, onRotate, onGetInfo } =\r\n    props;\r\n\r\n  return (\r\n    <FrontSideContainer>\r\n      <StyledButton onClick={onRotate}>\r\n        <img src={rotateIcon} alt=\"rotate\" />\r\n      </StyledButton>\r\n      <FrontCardTitle title={title}>{title}</FrontCardTitle>\r\n      <CardSubtitle title={channelTitle}>by: {channelTitle}</CardSubtitle>\r\n      <ImageWrapper>\r\n        <img src={imageUrl} alt={title} />\r\n      </ImageWrapper>\r\n      <CardContent>\r\n        <CardDescription title={description}>{description}</CardDescription>\r\n        <CardDate>{publishedAt}</CardDate>\r\n      </CardContent>\r\n      {videoId && (\r\n        <StyledButton type=\"button\" onClick={onGetInfo}>\r\n          show more info\r\n        </StyledButton>\r\n      )}\r\n    </FrontSideContainer>\r\n  );\r\n}\r\n\r\nFrontCardSide.defaultProps = {\r\n  title: NOT_AVAILABLE_TEXT,\r\n  channelTitle: NOT_AVAILABLE_TEXT,\r\n  imageUrl: NOT_AVAILABLE_TEXT,\r\n  description: NOT_AVAILABLE_TEXT,\r\n  publishedAt: NOT_AVAILABLE_TEXT,\r\n};\r\n\r\nexport default FrontCardSide;\r\n","import { NOT_AVAILABLE_TEXT } from '@constants/common/common';\r\nimport styled from 'styled-components';\r\nimport { FormFields } from '@services/form/formService';\r\nimport rotateIcon from '@assets/icons/rotate.svg';\r\nimport StyledButton from '@components/styledButton/styledButton';\r\nimport { CardTitle, SideCardContainer } from './frontSide';\r\n\r\nexport interface CardProps {\r\n  title?: string;\r\n  description?: string;\r\n  priority?: string;\r\n  markMeAsCreator?: string;\r\n  confirmData?: string;\r\n  notifications?: string;\r\n  onRotate?: VoidFunction;\r\n}\r\n\r\nconst BackSideContainer = styled(SideCardContainer)`\r\n  transform: rotateY(180deg);\r\n`;\r\n\r\nconst CardDescription = styled.p`\r\n  width: 100%;\r\n`;\r\n\r\nfunction BackCardSide(props: CardProps) {\r\n  const { title, description, priority, markMeAsCreator, notifications, confirmData, onRotate } =\r\n    props;\r\n\r\n  return (\r\n    <BackSideContainer>\r\n      <StyledButton onClick={onRotate}>\r\n        <img src={rotateIcon} alt=\"rotate\" />\r\n      </StyledButton>\r\n      <CardTitle>{title}</CardTitle>\r\n      <CardDescription>{description}</CardDescription>\r\n      {priority && <p>Priority: {priority}</p>}\r\n      {notifications === FormFields.SEND && <p>Send notifications to me</p>}\r\n      {notifications === FormFields.DO_NOT_SEND && <p>Don&#39;t send to me notifications</p>}\r\n      {markMeAsCreator && <p>I&#39;ve marked as creator</p>}\r\n      {confirmData && <p>Data confirmed by me</p>}\r\n    </BackSideContainer>\r\n  );\r\n}\r\n\r\nBackCardSide.defaultProps = {\r\n  title: NOT_AVAILABLE_TEXT,\r\n  description: NOT_AVAILABLE_TEXT,\r\n};\r\n\r\nexport default BackCardSide;\r\n","import color from '@utils/styles/stylesUtils';\r\nimport React, { useCallback, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport BackCardSide from './backSide';\r\nimport FrontCardSide from './frontSide';\r\n\r\nexport interface ICardProps {\r\n  videoId?: string;\r\n  title?: string;\r\n  channelTitle?: string;\r\n  imageUrl?: string;\r\n  description?: string;\r\n  priority?: string;\r\n  publishedAt?: string;\r\n  markMeAsCreator?: string;\r\n  confirmData?: string;\r\n  notifications?: string;\r\n  viewCount?: string | number;\r\n  likeCount?: string | number;\r\n  favoriteCount?: string | number;\r\n  commentCount?: string | number;\r\n  tags?: Array<string>;\r\n  onGetInfo?: (videoId: string) => void;\r\n}\r\n\r\ninterface IContainerProps {\r\n  isFrontShown: boolean;\r\n}\r\n\r\nconst CardContainer = styled.div<IContainerProps>`\r\n  position: relative;\r\n  width: 20rem;\r\n  height: 450px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin: 0.5rem;\r\n  border: 0.2rem solid ${color('neutral.card_title')};\r\n  border-radius: 1rem;\r\n  user-select: none;\r\n  transform-style: preserve-3d;\r\n  transform: rotateY(${(props: IContainerProps) => (props.isFrontShown ? '0deg' : '180deg')});\r\n  transition: 300ms;\r\n  background-color: ${color('neutral.card_background')};\r\n  box-shadow: 5px ${color('neutral.shadow')};\r\n`;\r\n\r\nfunction Card(props: ICardProps): JSX.Element {\r\n  const {\r\n    videoId,\r\n    title,\r\n    channelTitle,\r\n    imageUrl,\r\n    description,\r\n    publishedAt,\r\n    priority,\r\n    markMeAsCreator,\r\n    confirmData,\r\n    notifications,\r\n    onGetInfo,\r\n  } = props;\r\n  const [isFrontShown, setIsFrontShown] = useState<boolean>(true);\r\n\r\n  const handleRotate = useCallback(() => {\r\n    setIsFrontShown((prev) => !prev);\r\n  }, []);\r\n\r\n  const handleGetInfo = useCallback(() => {\r\n    if (onGetInfo && videoId) {\r\n      onGetInfo(videoId);\r\n    }\r\n  }, [onGetInfo, videoId]);\r\n\r\n  return (\r\n    <CardContainer isFrontShown={isFrontShown}>\r\n      <FrontCardSide\r\n        videoId={videoId}\r\n        title={title}\r\n        description={description}\r\n        imageUrl={imageUrl}\r\n        publishedAt={publishedAt}\r\n        channelTitle={channelTitle}\r\n        onRotate={handleRotate}\r\n        onGetInfo={handleGetInfo}\r\n      />\r\n      <BackCardSide\r\n        title={title}\r\n        description={description}\r\n        priority={priority}\r\n        markMeAsCreator={markMeAsCreator}\r\n        confirmData={confirmData}\r\n        notifications={notifications}\r\n        onRotate={handleRotate}\r\n      />\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import StyledButton from '@components/styledButton/styledButton';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport styled from 'styled-components';\r\nimport { ICardProps } from './card';\r\n\r\nexport interface ICardModalProps extends ICardProps {\r\n  onClose?: VoidFunction;\r\n}\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${color('neutral.overlay')};\r\n  opacity: 0.5;\r\n  z-index: 10;\r\n`;\r\n\r\nconst CardModalContainer = styled.div`\r\n  position: fixed;\r\n  width: 80vw;\r\n  height: 90vh;\r\n  top: 5vh;\r\n  background-color: ${color('neutral.card_background')};\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  padding: 2vh;\r\n  z-index: 20;\r\n`;\r\n\r\nconst CountContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n`;\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  width: 80vw;\r\n`;\r\n\r\nfunction CardModal(props: ICardModalProps): JSX.Element {\r\n  const {\r\n    title,\r\n    channelTitle,\r\n    imageUrl,\r\n    description,\r\n    publishedAt,\r\n    viewCount,\r\n    likeCount,\r\n    favoriteCount,\r\n    commentCount,\r\n    tags,\r\n    onClose,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <Overlay onClick={onClose} />\r\n      <CardModalContainer>\r\n        <StyledButton type=\"button\" onClick={onClose}>\r\n          X\r\n        </StyledButton>\r\n        <p>{title}</p>\r\n        <p>{channelTitle}</p>\r\n        <img src={imageUrl} alt={title} />\r\n        <p>{description}</p>\r\n        <p>{publishedAt}</p>\r\n        <CountContainer>\r\n          <p>Wievs: {viewCount}</p>\r\n          <p>Likes: {likeCount}</p>\r\n          <p>Favorites: {favoriteCount}</p>\r\n          <p>Comments: {commentCount}</p>\r\n        </CountContainer>\r\n        <TagsContainer>\r\n          {Array.isArray(tags) &&\r\n            tags.length > 0 &&\r\n            tags.map((tag) => <span key={tag}>#{tag}</span>)}\r\n        </TagsContainer>\r\n      </CardModalContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardModal;\r\n","import color from '@utils/styles/stylesUtils';\r\nimport styled from 'styled-components';\r\n\r\nconst Center = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\ninterface IWaveProps {\r\n  delay: number;\r\n}\r\n\r\nconst Wave = styled.div<IWaveProps>`\r\n  width: 5px;\r\n  height: 20px;\r\n  background: linear-gradient(\r\n    45deg,\r\n    ${color('primary.wave_animation_start')},\r\n    ${color('primary.wave_animation_end')}\r\n  );\r\n  margin: 10px;\r\n  animation: wave 1s linear infinite;\r\n  border-radius: 20px;\r\n  animation-delay: ${(props) => props.delay}s;\r\n\r\n  @keyframes wave {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    50% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst DEFAULT_WAVES_NUMBER = 10;\r\n\r\ninterface IWaveAnimationProps {\r\n  wavesNumber?: number;\r\n}\r\n\r\nfunction WaveAnimation({ wavesNumber = DEFAULT_WAVES_NUMBER }: IWaveAnimationProps) {\r\n  return (\r\n    <Center>\r\n      {Array.from({ length: wavesNumber }, (_, i) => (\r\n        <Wave key={i} delay={i / wavesNumber} />\r\n      ))}\r\n    </Center>\r\n  );\r\n}\r\n\r\nWaveAnimation.defaultProps = {\r\n  wavesNumber: DEFAULT_WAVES_NUMBER,\r\n};\r\n\r\nexport default WaveAnimation;\r\n","enum ApiPath {\r\n  SEARCH = 'search',\r\n  VIDEOS = 'videos',\r\n}\r\n\r\nexport default ApiPath;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport ApiPath from '@constants/apiPath/apiPath';\r\nimport { ISearchResponse } from '@api/getSearchResults';\r\nimport fetch from 'isomorphic-fetch';\r\n\r\nexport const searchValueApi = createApi({\r\n  reducerPath: 'searchApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.API_BASE_URL,\r\n    fetchFn: fetch,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getSearchResults: builder.query<ISearchResponse, string>({\r\n      query: (searchValue) =>\r\n        `${ApiPath.SEARCH}?key=${process.env.API_KEY}&type=video&part=snippet&maxResults=20&q=${searchValue}`,\r\n    }),\r\n    getAdditionalInfoById: builder.query<ISearchResponse, string | undefined>({\r\n      query: (searchId) =>\r\n        `${ApiPath.VIDEOS}?key=${process.env.API_KEY}&id=${searchId}&&part=snippet,statistics`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetSearchResultsQuery, useGetAdditionalInfoByIdQuery } = searchValueApi;\r\n","import { ICardProps } from '@components/card/card';\r\nimport { ISearchItem } from '@api/types/searchResults';\r\n\r\nexport interface ICardValues extends ICardProps {\r\n  id: string;\r\n}\r\n\r\nclass CardService {\r\n  static formatCardsData(data: Array<ISearchItem> = []) {\r\n    return data?.map((item: ISearchItem) => this.formatCardData(item));\r\n  }\r\n\r\n  private static formatCardData(item: ISearchItem): ICardValues {\r\n    const { snippet, statistics } = item;\r\n    const { title, description, channelTitle, publishedAt, thumbnails, tags } = snippet || {};\r\n    const imageUrl = thumbnails?.medium?.url || '';\r\n    const videoId = item?.id?.videoId;\r\n    const id = videoId || `${title}_${channelTitle}`;\r\n\r\n    const { viewCount, likeCount, favoriteCount, commentCount } = statistics || {};\r\n\r\n    return {\r\n      id,\r\n      videoId,\r\n      title,\r\n      channelTitle,\r\n      imageUrl,\r\n      description,\r\n      publishedAt,\r\n      viewCount,\r\n      likeCount,\r\n      favoriteCount,\r\n      commentCount,\r\n      tags,\r\n    };\r\n  }\r\n}\r\n\r\nexport default CardService;\r\n","import Card from '@components/card/card';\r\nimport CardModal from '@components/card/cardModal';\r\nimport WaveAnimation from '@components/waveAnimation/waveAnimation';\r\nimport { useGetAdditionalInfoByIdQuery } from '@services/api/searchService';\r\nimport CardService, { ICardValues } from '@services/card/card.service';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContainer = styled.div`\r\n  background-color: ${color('neutral.background')};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n`;\r\n\r\ninterface CardListProps {\r\n  formattedCards: Array<ICardValues>;\r\n  isLoading?: boolean;\r\n}\r\n\r\nfunction CardsList({ formattedCards, isLoading }: CardListProps) {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [skip, setSkip] = useState<boolean>(true);\r\n  const [activeVideoId, setActiveVideoId] = useState<string>('');\r\n  const { data, isFetching } = useGetAdditionalInfoByIdQuery(activeVideoId, {\r\n    skip,\r\n  });\r\n  const additionalInfoArray = CardService.formatCardsData(data?.items);\r\n  const additionalInfo = additionalInfoArray?.[0];\r\n\r\n  const handleGetInfo = useCallback((id: string) => {\r\n    setActiveVideoId(id);\r\n    setSkip(false);\r\n    setIsModalOpen(true);\r\n  }, []);\r\n\r\n  const handleCLoseModal = useCallback(() => {\r\n    setIsModalOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(isFetching || isLoading) && <WaveAnimation />}\r\n      <CardContainer>\r\n        {isModalOpen && (\r\n          <CardModal\r\n            title={additionalInfo?.title}\r\n            channelTitle={additionalInfo?.channelTitle}\r\n            description={additionalInfo?.description}\r\n            imageUrl={additionalInfo?.imageUrl}\r\n            publishedAt={additionalInfo?.publishedAt}\r\n            viewCount={additionalInfo?.viewCount}\r\n            likeCount={additionalInfo?.likeCount}\r\n            favoriteCount={additionalInfo?.favoriteCount}\r\n            commentCount={additionalInfo?.commentCount}\r\n            tags={additionalInfo?.tags}\r\n            onClose={handleCLoseModal}\r\n          />\r\n        )}\r\n        {formattedCards?.map((cardValues) => {\r\n          const {\r\n            id,\r\n            videoId,\r\n            title,\r\n            description,\r\n            imageUrl,\r\n            publishedAt,\r\n            channelTitle,\r\n            priority,\r\n            markMeAsCreator,\r\n            confirmData,\r\n            notifications,\r\n          } = cardValues;\r\n\r\n          return (\r\n            <Card\r\n              key={id}\r\n              videoId={videoId}\r\n              title={title}\r\n              description={description}\r\n              imageUrl={imageUrl}\r\n              publishedAt={publishedAt}\r\n              channelTitle={channelTitle}\r\n              priority={priority}\r\n              markMeAsCreator={markMeAsCreator}\r\n              confirmData={confirmData}\r\n              notifications={notifications}\r\n              onGetInfo={handleGetInfo}\r\n            />\r\n          );\r\n        })}\r\n      </CardContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nCardsList.defaultProps = {\r\n  isLoading: false,\r\n};\r\n\r\nexport default CardsList;\r\n","import SearchBar from '@components/searchBar/searchBar';\r\nimport CardsList from '@components/cardsList/cardsList';\r\nimport CardService from '@services/card/card.service';\r\nimport { useCallback, useState } from 'react';\r\nimport { useGetSearchResultsQuery } from '@services/api/searchService';\r\nimport { useAppSelector } from '@hooks/reduxHooks';\r\nimport { RootState } from '@store/store';\r\n\r\nfunction MainPage() {\r\n  const { searchValue: storeSearchValue } = useAppSelector((state: RootState) => state.search);\r\n  const [searchTerm, setSearchTerm] = useState<string>(storeSearchValue);\r\n  const { data, isError, isFetching } = useGetSearchResultsQuery(searchTerm);\r\n  const formattedCards = CardService.formatCardsData(data?.items);\r\n\r\n  const handleOnInputSubmit = useCallback((searchValue: string) => {\r\n    setSearchTerm(searchValue);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onInputSubmit={handleOnInputSubmit} />\r\n      {isError && (\r\n        <h2>Please, wait few hours before free api key search request qouta will be updated</h2>\r\n      )}\r\n      <CardsList formattedCards={formattedCards} isLoading={isFetching} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export default \"__VITE_ASSET__4e6ad5ae__\"","export default \"__VITE_ASSET__65bec281__\"","import styled from 'styled-components';\r\nimport GitHubLogo from '@assets/icons/github.svg';\r\nimport LinkedInLogo from '@assets/icons/linkedin.svg';\r\n\r\nconst PageContainer = styled.div`\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction AboutUsPage() {\r\n  return (\r\n    <PageContainer>\r\n      <>\r\n        <p>Developed by: </p>\r\n        <p>Anatoliy Aliaksandrau - Front End React Developer</p>\r\n        <p>\r\n          <a href=\"https://github.com/AnAtoliyAK\">\r\n            <img src={GitHubLogo} alt=\"GitHub Logo\" title=\"Anantoliy Aliaksandrau Github\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <a href=\"https://www.linkedin.com/in/anatoliy-aliaksandrau/\">\r\n            <img src={LinkedInLogo} alt=\"LinkedIn Logo\" title=\"Anantoliy Aliaksandrau LinkedIn\" />\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <a href=\"https://rs.school/\">© RSSchool 2023</a>\r\n        </p>\r\n      </>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default AboutUsPage;\r\n","const baseUrl = process.env.BASE_URL;\r\n\r\nconst HOME_PATH = `${baseUrl}`;\r\nconst ABOUT_PATH = `${baseUrl}about`;\r\nconst CREATE_CARDS_PATH = `${baseUrl}create-cards`;\r\nconst NOT_FOUND_PATH = '*';\r\nconst BASE_PATH = '/';\r\n\r\nconst APP_PATHS = {\r\n  BASE: BASE_PATH,\r\n  HOME: HOME_PATH,\r\n  ABOUT: ABOUT_PATH,\r\n  NOT_FOUND: NOT_FOUND_PATH,\r\n  CREATE_CARDS: CREATE_CARDS_PATH,\r\n} as const;\r\n\r\nexport default APP_PATHS;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ReactNode } from 'react';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport StyledButton from '@components/styledButton/styledButton';\r\n\r\nconst StyledNavLink = styled(StyledButton)`\r\n  .active {\r\n    color: ${color('danger.text')};\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n    text-transform: capitalize;\r\n\r\n    &::before {\r\n      content: '• ';\r\n    }\r\n  }\r\n\r\n  .unselected {\r\n    color: ${color('info.text')};\r\n\r\n    &:hover {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CustomNavLinkProps {\r\n  to: string;\r\n  children: ReactNode;\r\n}\r\n\r\nfunction CustomNavLink(props: CustomNavLinkProps) {\r\n  const { to, children } = props;\r\n\r\n  return (\r\n    <StyledNavLink>\r\n      <NavLink\r\n        to={to}\r\n        className={({ isActive }) => `nav-link ${isActive ? 'active' : 'unselected'}`}\r\n      >\r\n        {children}\r\n      </NavLink>\r\n    </StyledNavLink>\r\n  );\r\n}\r\n\r\nexport default CustomNavLink;\r\n","import APP_PATHS from '@constants/appPath/appPath';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst PageTitle = styled.h1`\r\n  color: ${color('neutral.title')};\r\n  text-align: center;\r\n  flex-grow: 1;\r\n\r\n  @media (min-width: 796px) {\r\n    margin-left: 15rem;\r\n  }\r\n`;\r\n\r\nfunction ShowLocation(): JSX.Element {\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n\r\n  switch (pathname) {\r\n    case APP_PATHS.HOME:\r\n      return <PageTitle>MAIN PAGE</PageTitle>;\r\n\r\n    case APP_PATHS.ABOUT:\r\n      return <PageTitle>ABOUT PAGE</PageTitle>;\r\n\r\n    case APP_PATHS.CREATE_CARDS:\r\n      return <PageTitle>NEW CARD PAGE</PageTitle>;\r\n\r\n    default:\r\n      return <PageTitle>NOT FOUND PAGE</PageTitle>;\r\n  }\r\n}\r\n\r\nexport default ShowLocation;\r\n","import styled from 'styled-components';\r\nimport APP_PATHS from '@constants/appPath/appPath';\r\nimport CustomNavLink from '@components/customNavLink/customNavLink';\r\nimport ShowTheLocationWithRouter from '@components/showLocation/showLocation';\r\nimport color from '@utils/styles/stylesUtils';\r\n\r\nconst HeaderStyles = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 8vh;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-end;\r\n  border-bottom: 2px solid ${color('neutral.card_title')};\r\n`;\r\n\r\nconst NavContainer = styled.div`\r\n  width: 20rem;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <HeaderStyles>\r\n      <ShowTheLocationWithRouter />\r\n      <NavContainer>\r\n        <CustomNavLink to={APP_PATHS.HOME}>Home</CustomNavLink>\r\n        <CustomNavLink to={APP_PATHS.CREATE_CARDS}>New card</CustomNavLink>\r\n        <CustomNavLink to={APP_PATHS.ABOUT}>About</CustomNavLink>\r\n      </NavContainer>\r\n    </HeaderStyles>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Outlet } from 'react-router-dom';\r\nimport Header from '@components/header/header';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayout = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nfunction Layout() {\r\n  return (\r\n    <StyledLayout>\r\n      <Header />\r\n      <Outlet />\r\n    </StyledLayout>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\nimport { ICardValues } from '@services/card/card.service';\r\n\r\nexport interface SearchState {\r\n  formattedCards: Array<ICardValues>;\r\n}\r\n\r\nconst initialState: SearchState = {\r\n  formattedCards: [],\r\n};\r\n\r\nexport const formSlice = createSlice({\r\n  name: 'form',\r\n  initialState,\r\n  reducers: {\r\n    addCard: (state, action: PayloadAction<ICardValues>) => {\r\n      state.formattedCards.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addCard } = formSlice.actions;\r\n\r\nexport default formSlice.reducer;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport styled from 'styled-components';\r\nimport { IInputValues } from '@services/form/formService';\r\nimport { FieldError, FieldValues, UseFormRegister } from 'react-hook-form';\r\n\r\nexport const StyledInput = styled.input`\r\n  font-size: 1.5rem;\r\n  margin: 0.5rem;\r\n`;\r\n\r\ntype IFormControlWithChildrenProps = Partial<IInputValues> & {\r\n  isError?: Partial<FieldError> | null;\r\n  register: UseFormRegister<FieldValues>;\r\n};\r\n\r\nfunction FormControlWithChildren(props: IFormControlWithChildrenProps): JSX.Element {\r\n  const { type, children, name, errorMessage, isError, register } = props;\r\n\r\n  return (\r\n    <>\r\n      {type === 'select' && (\r\n        <select {...register(name || type)}>\r\n          {children?.map((child) => {\r\n            const { id: childId, name: childName } = child;\r\n\r\n            return (\r\n              <option key={childId} value={childName}>\r\n                {childName}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      )}\r\n      {type === 'radio' && (\r\n        <fieldset>\r\n          {children?.map((child) => {\r\n            const { id: childId, name: childName, label: childLabel } = child;\r\n\r\n            return (\r\n              <div key={`${childId}-${type}`}>\r\n                <label htmlFor={childName}>{childLabel}</label>\r\n                <StyledInput\r\n                  {...register(String(name))}\r\n                  key={`${childId}-${type}`}\r\n                  id={childName}\r\n                  type={type}\r\n                  value={childName}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </fieldset>\r\n      )}\r\n\r\n      {isError && <span>{errorMessage}</span>}\r\n    </>\r\n  );\r\n}\r\n\r\nFormControlWithChildren.defaultProps = { isError: null };\r\n\r\nexport default FormControlWithChildren;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport styled from 'styled-components';\r\nimport { IInputValues } from '@services/form/formService';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport { FieldError, FieldValues, UseFormRegister } from 'react-hook-form';\r\nimport FormControlWithChildren, { StyledInput } from './formControlWithChildren';\r\n\r\nconst FormControl = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  label {\r\n    text-transform: capitalize;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${color('danger.text')};\r\n  }\r\n`;\r\n\r\ninterface IInputProps {\r\n  inputProps: IInputValues;\r\n  isError?: Partial<FieldError> | null;\r\n  register: UseFormRegister<FieldValues>;\r\n}\r\n\r\nfunction CustomFormControl(props: IInputProps) {\r\n  const { inputProps, isError, register } = props;\r\n  const { id, label, name, type, placeholder, children, errorMessage } = inputProps;\r\n\r\n  return (\r\n    <FormControl key={id}>\r\n      <label htmlFor={name}>{label}</label>\r\n      {children?.length ? (\r\n        <FormControlWithChildren\r\n          type={type}\r\n          errorMessage={errorMessage}\r\n          isError={isError}\r\n          name={name}\r\n          register={register}\r\n        >\r\n          {children}\r\n        </FormControlWithChildren>\r\n      ) : (\r\n        <>\r\n          <StyledInput\r\n            placeholder={placeholder}\r\n            type={type}\r\n            {...register(name, { required: true })}\r\n          />\r\n          {isError && <span>{errorMessage}</span>}\r\n        </>\r\n      )}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomFormControl.defaultProps = { isError: null };\r\n\r\nexport default CustomFormControl;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport StyledButton from '@components/styledButton/styledButton';\r\nimport styled from 'styled-components';\r\nimport { ICardValues } from '@services/card/card.service';\r\nimport FormService, { ICardDataOpts } from '@services/form/formService';\r\nimport color from '@utils/styles/stylesUtils';\r\nimport { FieldValues, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { useAppDispatch } from '@hooks/reduxHooks';\r\nimport { addCard } from '@store/slices/formSlice/formSlice';\r\nimport CustomFormControl from './formControl';\r\n\r\nconst CreteForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  max-width: 450px;\r\n`;\r\n\r\nconst CreateMessage = styled.p`\r\n  font-size: 2rem;\r\n  color: ${color('success.text')};\r\n`;\r\n\r\nconst SubmitForm = styled(StyledButton)``;\r\n\r\nconst DEFAULT_MESSAGE_TIME = 2 * 1000;\r\n\r\nfunction CustomForm(): JSX.Element {\r\n  const [isCardCreated, setIsCardCreated] = useState<boolean>(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n    reValidateMode: 'onSubmit',\r\n  });\r\n\r\n  const timerRef = useRef<NodeJS.Timer>();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timerRef?.current) {\r\n        clearTimeout(timerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit: SubmitHandler<FieldValues> = (formData) => {\r\n    const newCardData = FormService.createCardItemDto(formData as ICardDataOpts);\r\n\r\n    dispatch(addCard(newCardData as ICardValues));\r\n\r\n    setIsCardCreated(true);\r\n\r\n    timerRef.current = setTimeout(() => {\r\n      setIsCardCreated(false);\r\n      reset();\r\n    }, DEFAULT_MESSAGE_TIME);\r\n  };\r\n\r\n  return (\r\n    <CreteForm onSubmit={handleSubmit(onSubmit)}>\r\n      {FormService.inputsArrayVocabulary.map((inputProps) => {\r\n        const { id, name } = inputProps;\r\n        return (\r\n          <CustomFormControl\r\n            key={id}\r\n            inputProps={inputProps}\r\n            register={register}\r\n            isError={errors[name]}\r\n          />\r\n        );\r\n      })}\r\n      {isCardCreated ? <CreateMessage>Created!</CreateMessage> : <SubmitForm>Submit</SubmitForm>}\r\n    </CreteForm>\r\n  );\r\n}\r\n\r\nexport default CustomForm;\r\n","import styled from 'styled-components';\r\nimport { RootState } from '@store/store';\r\nimport { useAppSelector } from '@hooks/reduxHooks';\r\nimport CardsList from '../../components/cardsList/cardsList';\r\nimport CustomForm from './customForm';\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  height: calc(100vh - 15vh - 2px);\r\n`;\r\n\r\nconst PageTitle = styled.h2``;\r\n\r\nfunction NewCardPage(): JSX.Element {\r\n  const { formattedCards } = useAppSelector((state: RootState) => state.form);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <PageTitle>Create new card</PageTitle>\r\n      <CustomForm />\r\n      <CardsList formattedCards={formattedCards} />\r\n    </PageWrapper>\r\n  );\r\n}\r\n\r\nexport default NewCardPage;\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport NotFoundPage from '@pages/notFoundPage/notFoundPage';\r\nimport MainPage from '@pages/mainPage/mainPage';\r\nimport AboutUsPage from '@pages/aboutUsPage/aboutUsPage';\r\nimport APP_PATHS from '@constants/appPath/appPath';\r\nimport Layout from '@components/layout/layout';\r\nimport CreateCardPage from '@pages/createCardPage/newCardPage';\r\n\r\nfunction Router(): JSX.Element {\r\n  return (\r\n    <Routes>\r\n      <Route path={APP_PATHS.BASE} element={<Layout />}>\r\n        <Route index element={<NotFoundPage />} />\r\n        <Route path={APP_PATHS.HOME} element={<MainPage />} />\r\n        <Route path={APP_PATHS.ABOUT} element={<AboutUsPage />} />\r\n        <Route path={APP_PATHS.CREATE_CARDS} element={<CreateCardPage />} />\r\n        <Route path={APP_PATHS.NOT_FOUND} element={<NotFoundPage />} />\r\n      </Route>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { StaticRouter } from 'react-router-dom/server';\r\n\r\nimport Router from './routes/router';\r\n\r\ninterface IRenderProps {\r\n  path: string;\r\n}\r\n\r\nexport const render = ({ path }: IRenderProps) => {\r\n  return ReactDOMServer.renderToString(\r\n    <StaticRouter location={path}>\r\n      <Router />\r\n    </StaticRouter>\r\n  );\r\n};\r\n"],"names":["initialState","FormFields","uuidv4","CardDescription","CardContainer","ApiPath","PageTitle","ShowTheLocationWithRouter","CreateCardPage"],"mappings":"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"}